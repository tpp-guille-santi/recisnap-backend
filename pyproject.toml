[project]
requires-python = ">=3.11"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "N",  # pep8-naming
    "I",  # isort
    "UP",  # pyupgrade
    "C4",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "Q",  # flake8-quotes
]
ignore = [
    "B008",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.isort]
force-single-line = true

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.format]
quote-style = "single"
line-ending = "lf"

[tool.poetry]
name = "image-predictor-service"
version = "0.1.0"
description = ""
authors = ["santigandolfo <santiago.gandolfo@tiendanube.com>"]
readme = "README.md"
packages = [{include = "image_predictor_service"}]

[tool.poetry.dependencies]
python = "^3.11"
asyncer = "^0.0.2"
deta = "^1.2.0"
fastapi = "^0.106.0"
firebase-admin = "^6.3.0"
httpx = "^0.26.0"
motor = "^3.3.2"
odmantic = "^1.0.0"
pydantic = {extras = ["email"], version = "^2.5.3"}
python-multipart = "^0.0.6"
uvicorn = {extras = ["standard"], version = "^0.25.0"}
pydantic-settings = "^2.1.0"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
